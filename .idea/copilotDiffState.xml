<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/populate-llm-models.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/populate-llm-models.js" />
              <option name="updatedContent" value="// Script per popolare la collection llm_models con dati di esempio&#10;// Esegui questo script nella console del browser quando sei autenticato come admin&#10;&#10;const createLLMModels = async () =&gt; {&#10;  const models = [&#10;    {&#10;      name: 'gemini-1.5-flash',&#10;      inputCostPerMillion: 0.075,   // $0.075 per milione di token input&#10;      outputCostPerMillion: 0.3,   // $0.30 per milione di token output&#10;      isActive: true&#10;    },&#10;    {&#10;      name: 'gemini-2.5-flash',&#10;      inputCostPerMillion: 0.1,    // $0.10 per milione di token input  &#10;      outputCostPerMillion: 0.4,   // $0.40 per milione di token output&#10;      isActive: true&#10;    },&#10;    {&#10;      name: 'gemini-2.5-flash-lite',&#10;      inputCostPerMillion: 0.05,   // $0.05 per milione di token input&#10;      outputCostPerMillion: 0.2,   // $0.20 per milione di token output&#10;      isActive: true&#10;    },&#10;    {&#10;      name: 'sonar-pro',&#10;      inputCostPerMillion: 3.0,    // $3.00 per milione di token input&#10;      outputCostPerMillion: 15.0,  // $15.00 per milione di token output&#10;      isActive: true&#10;    }&#10;  ];&#10;&#10;  console.log('Creating LLM models...');&#10;  &#10;  for (const model of models) {&#10;    try {&#10;      const docRef = await window.firestoreService.createLLMModel(model);&#10;      console.log(`✅ Created model ${model.name} with ID: ${docRef}`);&#10;    } catch (error) {&#10;      console.error(`❌ Error creating model ${model.name}:`, error);&#10;    }&#10;  }&#10;  &#10;  console.log('Done! Refresh the page to see the costs.');&#10;};&#10;&#10;// Esegui la funzione&#10;createLLMModels();" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#10;    &lt;title&gt;Curiow&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.1.3/24/outline/heroicons.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script type=&quot;importmap&quot;&gt;&#10;{&#10;  &quot;imports&quot;: {&#10;    &quot;react-dom/&quot;: &quot;https://esm.sh/react-dom@^19.1.1/&quot;,&#10;    &quot;@google/genai&quot;: &quot;https://esm.sh/@google/genai@^1.13.0&quot;,&#10;    &quot;react/&quot;: &quot;https://esm.sh/react@^19.1.1/&quot;,&#10;    &quot;react&quot;: &quot;https://esm.sh/react@^19.1.1&quot;,&#10;    &quot;firebase/app&quot;: &quot;https://esm.sh/firebase@10.12.2/app&quot;,&#10;    &quot;firebase/auth&quot;: &quot;https://esm.sh/firebase@10.12.2/auth&quot;,&#10;    &quot;firebase/firestore&quot;: &quot;https://esm.sh/firebase@10.12.2/firestore&quot;,&#10;    &quot;firebase/&quot;: &quot;https://esm.sh/firebase@^12.1.0/&quot;&#10;  }&#10;}&#10;&lt;/script&gt;&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot;&gt;&#10;&lt;/head&gt;&#10;  &lt;body class=&quot;bg-slate-50 dark:bg-slate-900&quot;&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;script type=&quot;module&quot; src=&quot;/index.tsx&quot;&gt;&lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#10;    &lt;title&gt;Curiow&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.1.3/24/outline/heroicons.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script type=&quot;importmap&quot;&gt;&#10;{&#10;  &quot;imports&quot;: {&#10;    &quot;react-dom/&quot;: &quot;https://esm.sh/react-dom@^19.1.1/&quot;,&#10;    &quot;@google/genai&quot;: &quot;https://esm.sh/@google/genai@^1.13.0&quot;,&#10;    &quot;react/&quot;: &quot;https://esm.sh/react@^19.1.1/&quot;,&#10;    &quot;react&quot;: &quot;https://esm.sh/react@^19.1.1&quot;,&#10;    &quot;firebase/app&quot;: &quot;https://esm.sh/firebase@10.12.2/app&quot;,&#10;    &quot;firebase/auth&quot;: &quot;https://esm.sh/firebase@10.12.2/auth&quot;,&#10;    &quot;firebase/firestore&quot;: &quot;https://esm.sh/firebase@10.12.2/firestore&quot;&#10;  }&#10;}&#10;&lt;/script&gt;&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot;&gt;&#10;&lt;/head&gt;&#10;  &lt;body class=&quot;bg-slate-50 dark:bg-slate-900&quot;&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;script type=&quot;module&quot; src=&quot;/index.tsx&quot;&gt;&lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/videos/curiow-feed.mp4">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/videos/curiow-feed.mp4" />
              <option name="updatedContent" value="# Placeholder video file - replace with actual video showcasing Curiow's feed features" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/videos/curiow-intro.mp4">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/videos/curiow-intro.mp4" />
              <option name="updatedContent" value="# Placeholder video file - replace with actual video&#10;# This would be a video showcasing Curiow's main features" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/scripts/normalizeStepQuestions.cjs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/scripts/normalizeStepQuestions.cjs" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="const { initializeApp } = require('firebase/app');&#10;const { getFirestore, collection, getDocs, updateDoc, doc } = require('firebase/firestore');&#10;const { firebaseConfig } = require('../services/firebase.cjs');&#10;&#10;const app = initializeApp(firebaseConfig);&#10;const db = getFirestore(app);&#10;&#10;async function normalizeStepQuestions() {&#10;  const questionsRef = collection(db, 'questions');&#10;  const snapshot = await getDocs(questionsRef);&#10;  let updatedCount = 0;&#10;  for (const qDoc of snapshot.docs) {&#10;    const data = qDoc.data();&#10;    if (data.section === 'step' &amp;&amp; (data.index === null || data.index === undefined)) {&#10;      await updateDoc(doc(db, 'questions', qDoc.id), { index: 0 });&#10;      updatedCount++;&#10;      console.log(`Aggiornata question ${qDoc.id}: index -&gt; 0`);&#10;    }&#10;  }&#10;  console.log(`Totale domande normalizzate: ${updatedCount}`);&#10;}&#10;&#10;if (require.main === module) {&#10;  normalizeStepQuestions().then(() =&gt; {&#10;    console.log('Normalizzazione completata.');&#10;    process.exit(0);&#10;  }).catch(err =&gt; {&#10;    console.error('Errore durante la normalizzazione:', err);&#10;    process.exit(1);&#10;  });&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/scripts/normalizeStepQuestions.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/scripts/normalizeStepQuestions.js" />
              <option name="updatedContent" value="const { initializeApp } = require('firebase/app');&#10;const { getFirestore, collection, getDocs, updateDoc, doc } = require('firebase/firestore');&#10;const { firebaseConfig } = require('../services/firebase');&#10;&#10;const app = initializeApp(firebaseConfig);&#10;const db = getFirestore(app);&#10;&#10;async function normalizeStepQuestions() {&#10;  const questionsRef = collection(db, 'questions');&#10;  const snapshot = await getDocs(questionsRef);&#10;  let updatedCount = 0;&#10;  for (const qDoc of snapshot.docs) {&#10;    const data = qDoc.data();&#10;    if (data.section === 'step' &amp;&amp; (data.index === null || data.index === undefined)) {&#10;      await updateDoc(doc(db, 'questions', qDoc.id), { index: 0 });&#10;      updatedCount++;&#10;      console.log(`Aggiornata question ${qDoc.id}: index -&gt; 0`);&#10;    }&#10;  }&#10;  console.log(`Totale domande normalizzate: ${updatedCount}`);&#10;}&#10;&#10;if (require.main === module) {&#10;  normalizeStepQuestions().then(() =&gt; {&#10;    console.log('Normalizzazione completata.');&#10;    process.exit(0);&#10;  }).catch(err =&gt; {&#10;    console.error('Errore durante la normalizzazione:', err);&#10;    process.exit(1);&#10;  });&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/scripts/normalizeStepQuestions.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/scripts/normalizeStepQuestions.ts" />
              <option name="updatedContent" value="import { initializeApp } from 'firebase/app';&#10;import { getFirestore, collection, getDocs, updateDoc, doc } from 'firebase/firestore';&#10;import { firebaseConfig } from '../services/firebase';&#10;&#10;// Inizializza Firebase&#10;const app = initializeApp(firebaseConfig);&#10;const db = getFirestore(app);&#10;&#10;async function normalizeStepQuestions() {&#10;  const questionsRef = collection(db, 'questions');&#10;  const snapshot = await getDocs(questionsRef);&#10;  let updatedCount = 0;&#10;  for (const qDoc of snapshot.docs) {&#10;    const data = qDoc.data();&#10;    if (data.section === 'step' &amp;&amp; (data.index === null || data.index === undefined)) {&#10;      await updateDoc(doc(db, 'questions', qDoc.id), { index: 0 });&#10;      updatedCount++;&#10;      console.log(`Aggiornata question ${qDoc.id}: index -&gt; 0`);&#10;    }&#10;  }&#10;  console.log(`Totale domande normalizzate: ${updatedCount}`);&#10;}&#10;&#10;// Esegui solo se chiamato direttamente&#10;if (require.main === module) {&#10;  normalizeStepQuestions().then(() =&gt; {&#10;    console.log('Normalizzazione completata.');&#10;    process.exit(0);&#10;  }).catch(err =&gt; {&#10;    console.error('Errore durante la normalizzazione:', err);&#10;    process.exit(1);&#10;  });&#10;}&#10;&#10;export default normalizeStepQuestions;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/services/firebase.cjs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/services/firebase.cjs" />
              <option name="updatedContent" value="module.exports = {&#10;  firebaseConfig: {&#10;    apiKey: &quot;AIzaSyDYlR9POLPSqn9yiQtu_WZa4rHOhbEsFDQ&quot;,&#10;    authDomain: &quot;curiow-432ed.firebaseapp.com&quot;,&#10;    projectId: &quot;curiow-432ed&quot;,&#10;    storageBucket: &quot;curiow-432ed.firebasestorage.app&quot;,&#10;    messagingSenderId: &quot;115136967854&quot;,&#10;    appId: &quot;1:115136967854:web:24228c1379993b8c61e93f&quot;,&#10;    measurementId: &quot;G-LF4YY7HHR3&quot;&#10;  }&#10;};&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>