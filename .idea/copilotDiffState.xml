<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/firestore.rules">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/firestore.rules" />
              <option name="updatedContent" value="rules_version = '2';&#10;service cloud.firestore {&#10;  match /databases/{database}/documents {&#10;    // Regole per gli utenti&#10;    match /users/{userId} {&#10;      allow read, write: if request.auth != null &amp;&amp; request.auth.uid == userId;&#10;      // Permetti agli admin di leggere tutti gli utenti&#10;      allow read: if request.auth != null &amp;&amp; &#10;        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &amp;&amp;&#10;        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';&#10;    }&#10;    &#10;    // Regole per le gemme (lettura pubblica, scrittura per admin)&#10;    match /gems/{gemId} {&#10;      allow read: if true; // Lettura pubblica&#10;      allow write: if request.auth != null &amp;&amp; &#10;        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &amp;&amp;&#10;        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions.canCreateGems == true;&#10;      &#10;      // Domande degli utenti sulle gemme&#10;      match /userQuestions/{questionId} {&#10;        allow read: if true;&#10;        allow write: if request.auth != null;&#10;      }&#10;    }&#10;    &#10;    // Regole per i canali (lettura pubblica)&#10;    match /channels/{channelId} {&#10;      allow read: if true;&#10;      allow write: if request.auth != null &amp;&amp; &#10;        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &amp;&amp;&#10;        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';&#10;    }&#10;    &#10;    // Regole per i suggerimenti di argomenti&#10;    match /topicSuggestions/{suggestionId} {&#10;      allow read, write: if request.auth != null;&#10;    }&#10;    &#10;    // ===== REGOLE PER LE NUOVE LISTE =====&#10;    &#10;    // Regole per le liste&#10;    match /lists/{listId} {&#10;      allow read, write: if request.auth != null &amp;&amp; &#10;        resource.data.createdBy == request.auth.uid;&#10;      allow create: if request.auth != null;&#10;      allow read: if request.auth != null &amp;&amp; resource.data.isPublic == true;&#10;    }&#10;    &#10;    // Regole per i membri delle liste&#10;    match /list_members/{memberId} {&#10;      allow read, write: if request.auth != null &amp;&amp; &#10;        resource.data.userId == request.auth.uid;&#10;      allow read, write: if request.auth != null &amp;&amp; &#10;        exists(/databases/$(database)/documents/lists/$(resource.data.listId)) &amp;&amp;&#10;        get(/databases/$(database)/documents/lists/$(resource.data.listId)).data.createdBy == request.auth.uid;&#10;    }&#10;    &#10;    // Regole per gli elementi delle liste&#10;    match /list_items/{itemId} {&#10;      allow read, write: if request.auth != null &amp;&amp; &#10;        exists(/databases/$(database)/documents/lists/$(resource.data.listId)) &amp;&amp;&#10;        get(/databases/$(database)/documents/lists/$(resource.data.listId)).data.createdBy == request.auth.uid;&#10;      allow read: if request.auth != null &amp;&amp; &#10;        exists(/databases/$(database)/documents/lists/$(resource.data.listId)) &amp;&amp;&#10;        get(/databases/$(database)/documents/lists/$(resource.data.listId)).data.isPublic == true;&#10;    }&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#10;    &lt;title&gt;Curiow&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.1.3/24/outline/heroicons.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script type=&quot;importmap&quot;&gt;&#10;{&#10;  &quot;imports&quot;: {&#10;    &quot;react-dom/&quot;: &quot;https://esm.sh/react-dom@^19.1.1/&quot;,&#10;    &quot;@google/genai&quot;: &quot;https://esm.sh/@google/genai@^1.13.0&quot;,&#10;    &quot;react/&quot;: &quot;https://esm.sh/react@^19.1.1/&quot;,&#10;    &quot;react&quot;: &quot;https://esm.sh/react@^19.1.1&quot;,&#10;    &quot;firebase/app&quot;: &quot;https://esm.sh/firebase@10.12.2/app&quot;,&#10;    &quot;firebase/auth&quot;: &quot;https://esm.sh/firebase@10.12.2/auth&quot;,&#10;    &quot;firebase/firestore&quot;: &quot;https://esm.sh/firebase@10.12.2/firestore&quot;,&#10;    &quot;firebase/&quot;: &quot;https://esm.sh/firebase@^12.1.0/&quot;&#10;  }&#10;}&#10;&lt;/script&gt;&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot;&gt;&#10;&lt;/head&gt;&#10;  &lt;body class=&quot;bg-slate-50 dark:bg-slate-900&quot;&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;script type=&quot;module&quot; src=&quot;/index.tsx&quot;&gt;&lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#10;    &lt;title&gt;Curiow&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.1.3/24/outline/heroicons.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script type=&quot;importmap&quot;&gt;&#10;{&#10;  &quot;imports&quot;: {&#10;    &quot;react-dom/&quot;: &quot;https://esm.sh/react-dom@^19.1.1/&quot;,&#10;    &quot;@google/genai&quot;: &quot;https://esm.sh/@google/genai@^1.13.0&quot;,&#10;    &quot;react/&quot;: &quot;https://esm.sh/react@^19.1.1/&quot;,&#10;    &quot;react&quot;: &quot;https://esm.sh/react@^19.1.1&quot;,&#10;    &quot;firebase/app&quot;: &quot;https://esm.sh/firebase@10.12.2/app&quot;,&#10;    &quot;firebase/auth&quot;: &quot;https://esm.sh/firebase@10.12.2/auth&quot;,&#10;    &quot;firebase/firestore&quot;: &quot;https://esm.sh/firebase@10.12.2/firestore&quot;&#10;  }&#10;}&#10;&lt;/script&gt;&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot;&gt;&#10;&lt;/head&gt;&#10;  &lt;body class=&quot;bg-slate-50 dark:bg-slate-900&quot;&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;script type=&quot;module&quot; src=&quot;/index.tsx&quot;&gt;&lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/videos/curiow-feed.mp4">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/videos/curiow-feed.mp4" />
              <option name="updatedContent" value="# Placeholder video file - replace with actual video showcasing Curiow's feed features" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/videos/curiow-intro.mp4">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/videos/curiow-intro.mp4" />
              <option name="updatedContent" value="# Placeholder video file - replace with actual video&#10;# This would be a video showcasing Curiow's main features" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/FeedbackModal.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/FeedbackModal.tsx" />
              <option name="originalContent" value="import React, { useState } from 'react';&#10;&#10;interface FeedbackModalProps {&#10;  section: string;&#10;  onSubmit: (message: string) =&gt; Promise&lt;void&gt;;&#10;  onCancel: () =&gt; void;&#10;  onSuccess?: () =&gt; void;&#10;}&#10;&#10;const FeedbackModal: React.FC&lt;FeedbackModalProps&gt; = ({ section, onSubmit, onCancel, onSuccess }) =&gt; {&#10;" />
              <option name="updatedContent" value="import React, { useState } from 'react';&#10;&#10;interface FeedbackModalProps {&#10;  section: string;&#10;  onSubmit: (section: string, message: string) =&gt; Promise&lt;void&gt;;&#10;  onCancel: () =&gt; void;&#10;  onSuccess?: () =&gt; void;&#10;}&#10;&#10;const FeedbackModal: React.FC&lt;FeedbackModalProps&gt; = ({ section, onSubmit, onCancel, onSuccess }) =&gt; {&#10;  const [currentSection, setCurrentSection] = useState(section);&#10;  const [message, setMessage] = useState('');&#10;  const [isLoading, setIsLoading] = useState(false);&#10;  const [error, setError] = useState('');&#10;&#10;  const handleSubmit = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    &#10;    if (!currentSection.trim()) {&#10;      setError('Inserisci una sezione');&#10;      return;&#10;    }&#10;    &#10;    if (!message.trim()) {&#10;      setError('Inserisci un messaggio di feedback');&#10;      return;&#10;    }&#10;&#10;    setIsLoading(true);&#10;    setError('');&#10;&#10;    try {&#10;      await onSubmit(currentSection.trim(), message.trim());&#10;      onSuccess?.(); // Chiama il callback onSuccess se fornito&#10;      onCancel(); // Chiudi la modale dopo il successo&#10;    } catch (err) {&#10;      setError('Errore nell\'invio del feedback. Riprova.');&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4&quot;&gt;&#10;      &lt;div className=&quot;bg-white rounded-xl max-w-md w-full max-h-[90vh] overflow-y-auto&quot;&gt;&#10;        &lt;div className=&quot;p-6&quot;&gt;&#10;          &lt;div className=&quot;flex justify-between items-center mb-4&quot;&gt;&#10;            &lt;h2 className=&quot;text-xl font-bold text-gray-900&quot;&gt;Feedback Betatester&lt;/h2&gt;&#10;            &lt;button&#10;              onClick={onCancel}&#10;              className=&quot;text-gray-400 hover:text-gray-600 transition-colors&quot;&#10;              disabled={isLoading}&#10;            &gt;&#10;              &lt;svg className=&quot;w-6 h-6&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; strokeWidth={2} d=&quot;M6 18L18 6M6 6l12 12&quot; /&gt;&#10;              &lt;/svg&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;form onSubmit={handleSubmit} className=&quot;space-y-4&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;label htmlFor=&quot;feedback-section&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                Sezione *&#10;              &lt;/label&gt;&#10;              &lt;input&#10;                id=&quot;feedback-section&quot;&#10;                type=&quot;text&quot;&#10;                value={currentSection}&#10;                onChange={(e) =&gt; setCurrentSection(e.target.value)}&#10;                placeholder=&quot;Es. Feed principale, Dettaglio gem, ecc.&quot;&#10;                className=&quot;w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent&quot;&#10;                disabled={isLoading}&#10;                maxLength={100}&#10;              /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;              &lt;label htmlFor=&quot;feedback-message&quot; className=&quot;block text-sm font-medium text-gray-700 mb-2&quot;&gt;&#10;                Messaggio di feedback *&#10;              &lt;/label&gt;&#10;              &lt;textarea&#10;                id=&quot;feedback-message&quot;&#10;                value={message}&#10;                onChange={(e) =&gt; setMessage(e.target.value)}&#10;                placeholder=&quot;Descrivi il tuo feedback, suggerimenti o problemi riscontrati...&quot;&#10;                rows={6}&#10;                className=&quot;w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none&quot;&#10;                disabled={isLoading}&#10;                maxLength={2000}&#10;              /&gt;&#10;              &lt;div className=&quot;text-xs text-gray-500 mt-1&quot;&gt;&#10;                {message.length}/2000 caratteri&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {error &amp;&amp; (&#10;              &lt;div className=&quot;text-red-600 text-sm bg-red-50 p-3 rounded-lg&quot;&gt;&#10;                {error}&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            &lt;div className=&quot;flex space-x-3 pt-4&quot;&gt;&#10;              &lt;button&#10;                type=&quot;button&quot;&#10;                onClick={onCancel}&#10;                className=&quot;flex-1 px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors&quot;&#10;                disabled={isLoading}&#10;              &gt;&#10;                Annulla&#10;              &lt;/button&gt;&#10;              &lt;button&#10;                type=&quot;submit&quot;&#10;                disabled={isLoading || !message.trim()}&#10;                className=&quot;flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors&quot;&#10;              &gt;&#10;                {isLoading ? 'Invio...' : 'Invia Feedback'}&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/form&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default FeedbackModal;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>