<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/public/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#10;    &lt;title&gt;Curiow&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.1.3/24/outline/heroicons.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script type=&quot;importmap&quot;&gt;&#10;{&#10;  &quot;imports&quot;: {&#10;    &quot;react-dom/&quot;: &quot;https://esm.sh/react-dom@^19.1.1/&quot;,&#10;    &quot;@google/genai&quot;: &quot;https://esm.sh/@google/genai@^1.13.0&quot;,&#10;    &quot;react/&quot;: &quot;https://esm.sh/react@^19.1.1/&quot;,&#10;    &quot;react&quot;: &quot;https://esm.sh/react@^19.1.1&quot;,&#10;    &quot;firebase/app&quot;: &quot;https://esm.sh/firebase@10.12.2/app&quot;,&#10;    &quot;firebase/auth&quot;: &quot;https://esm.sh/firebase@10.12.2/auth&quot;,&#10;    &quot;firebase/firestore&quot;: &quot;https://esm.sh/firebase@10.12.2/firestore&quot;,&#10;    &quot;firebase/&quot;: &quot;https://esm.sh/firebase@^12.1.0/&quot;&#10;  }&#10;}&#10;&lt;/script&gt;&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot;&gt;&#10;&lt;/head&gt;&#10;  &lt;body class=&quot;bg-slate-50 dark:bg-slate-900&quot;&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;script type=&quot;module&quot; src=&quot;/index.tsx&quot;&gt;&lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&#10;    &lt;title&gt;Curiow&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.1.3/24/outline/heroicons.min.css&quot; rel=&quot;stylesheet&quot;&gt;&#10;  &lt;script type=&quot;importmap&quot;&gt;&#10;{&#10;  &quot;imports&quot;: {&#10;    &quot;react-dom/&quot;: &quot;https://esm.sh/react-dom@^19.1.1/&quot;,&#10;    &quot;@google/genai&quot;: &quot;https://esm.sh/@google/genai@^1.13.0&quot;,&#10;    &quot;react/&quot;: &quot;https://esm.sh/react@^19.1.1/&quot;,&#10;    &quot;react&quot;: &quot;https://esm.sh/react@^19.1.1&quot;,&#10;    &quot;firebase/app&quot;: &quot;https://esm.sh/firebase@10.12.2/app&quot;,&#10;    &quot;firebase/auth&quot;: &quot;https://esm.sh/firebase@10.12.2/auth&quot;,&#10;    &quot;firebase/firestore&quot;: &quot;https://esm.sh/firebase@10.12.2/firestore&quot;&#10;  }&#10;}&#10;&lt;/script&gt;&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot;&gt;&#10;&lt;/head&gt;&#10;  &lt;body class=&quot;bg-slate-50 dark:bg-slate-900&quot;&gt;&#10;    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;&#10;    &lt;script type=&quot;module&quot; src=&quot;/index.tsx&quot;&gt;&lt;/script&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/videos/curiow-feed.mp4">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/videos/curiow-feed.mp4" />
              <option name="updatedContent" value="# Placeholder video file - replace with actual video showcasing Curiow's feed features" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/videos/curiow-intro.mp4">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/videos/curiow-intro.mp4" />
              <option name="updatedContent" value="# Placeholder video file - replace with actual video&#10;# This would be a video showcasing Curiow's main features" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/GemDetailView.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/GemDetailView.tsx" />
              <option name="originalContent" value="import React, { useState, useEffect, useRef } from 'react';&#10;import { Gem, UserQuestion, User, Filter, Channel } from '../types';&#10;import { ChevronLeftIcon, HeartIcon, ShareIcon, PaperAirplaneIcon, SparklesIcon, PlusCircleIcon, TagIcon, LinkIcon, ChevronDownIcon, LightBulbIcon, BookOpenIcon } from './icons';&#10;import Header from './Header';&#10;&#10;interface GemDetailViewProps {&#10;  gem: Gem;&#10;  isFavorite: boolean;&#10;  isLoggedIn: boolean;&#10;  user?: User | null;&#10;  onBack: () =&gt; void;&#10;  onSaveRequest: (gemId: string) =&gt; void;&#10;  onRemoveRequest: (gemId: string) =&gt; void;&#10;  onAddUserQuestion: (gemId: string, question: string) =&gt; void;&#10;  onTagSelect: (tag: string) =&gt; void;&#10;  onLogin: () =&gt; void;&#10;  onLogout: () =&gt; void;&#10;  onNavigate: (view: 'feed' | 'saved' | 'profile' | 'dashboard' | 'topics') =&gt; void;&#10;  selectedFilter?: Filter;&#10;  onSelectFilter?: (filter: Filter) =&gt; void;&#10;  channels?: Channel[];&#10;}&#10;&#10;const UserQuestionItem: React.FC&lt;{ userQuestion: UserQuestion }&gt; = ({ userQuestion }) =&gt; (&#10;    &lt;div className=&quot;mt-4 p-4 bg-slate-100 dark:bg-slate-800 rounded-lg&quot;&gt;&#10;        &lt;p className=&quot;font-semibold text-sm text-slate-600 dark:text-slate-300&quot;&gt;Domanda: &lt;span className=&quot;font-normal&quot;&gt;{userQuestion.question}&lt;/span&gt;&lt;/p&gt;&#10;        &lt;div className=&quot;mt-2 text-sm text-slate-800 dark:text-slate-200&quot;&gt;&#10;            {userQuestion.isGenerating ? (&#10;                 &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;SparklesIcon className=&quot;w-4 h-4 animate-pulse text-indigo-400&quot; /&gt;&#10;                    &lt;span&gt;Generazione risposta...&lt;/span&gt;&#10;                &lt;/div&gt;&#10;            ) : (&#10;                &lt;p className=&quot;whitespace-pre-wrap&quot;&gt;{userQuestion.answer}&lt;/p&gt;&#10;            )}&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;);&#10;&#10;const GemDetailView: React.FC&lt;GemDetailViewProps&gt; = ({ gem, isFavorite, onBack, onSaveRequest, onRemoveRequest, onAddUserQuestion, onTagSelect, isLoggedIn, user, onLogin, onLogout, onNavigate, selectedFilter, onSelectFilter, channels }) =&gt; {&#10;  const [userQuestion, setUserQuestion] = useState('');&#10;  const [isSourcesOpen, setIsSourcesOpen] = useState(false);&#10;  const [hasAutoScrolled, setHasAutoScrolled] = useState(false);&#10;  const imgRef = useRef&lt;HTMLImageElement | null&gt;(null);&#10;  // nuovo stato per tab&#10;  const [activeTab, setActiveTab] = useState&lt;'tips' | 'saggio'&gt;('tips');&#10;  // refs per animazione cross-fade&#10;  const tipsRef = useRef&lt;HTMLDivElement | null&gt;(null);&#10;  const saggioRef = useRef&lt;HTMLDivElement | null&gt;(null);&#10;  const [contentHeight, setContentHeight] = useState&lt;number&gt;(0);&#10;&#10;  // funzione misura altezza contenuto attivo&#10;  const measureActiveHeight = () =&gt; {&#10;    const el = activeTab === 'tips' ? tipsRef.current : saggioRef.current;&#10;    if (el) {&#10;      // usa scrollHeight per includere overflow&#10;      const h = el.scrollHeight;&#10;      setContentHeight(h);&#10;    }&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    // misura dopo cambio tab / gem&#10;    requestAnimationFrame(() =&gt; measureActiveHeight());&#10;  }, [activeTab, gem.id]);&#10;&#10;  useEffect(() =&gt; {&#10;    // misura al resize per mantenere altezza coerente&#10;    const onResize = () =&gt; measureActiveHeight();&#10;    window.addEventListener('resize', onResize);&#10;    return () =&gt; window.removeEventListener('resize', onResize);&#10;  }, []);&#10;&#10;  // Funzione per scrollare il titolo allineandolo appena sotto l'header sticky&#10;  const scrollTitleIntoView = (smooth = false) =&gt; {&#10;    const titleEl = document.getElementById('gem-title');&#10;    if (!titleEl) return;&#10;    const headerEl = document.querySelector('header');&#10;    const headerHeight = headerEl ? (headerEl as HTMLElement).offsetHeight : 0;&#10;    const buffer = 8; // piccolo margine&#10;    const target = titleEl.getBoundingClientRect().top + window.scrollY - headerHeight - buffer;&#10;    window.scrollTo({ top: target &gt;= 0 ? target : 0, behavior: smooth ? 'smooth' : 'auto' });&#10;    setHasAutoScrolled(true);&#10;  };&#10;&#10;  // Scroll iniziale dopo mount/cambio gem (post layout)&#10;  useEffect(() =&gt; {&#10;    setHasAutoScrolled(false);&#10;    // Usa rAF per attendere layout, poi ulteriore timeout breve per carichi asincroni minimi&#10;    requestAnimationFrame(() =&gt; {&#10;      scrollTitleIntoView(false);&#10;      setTimeout(() =&gt; { if (!hasAutoScrolled) scrollTitleIntoView(false); }, 60);&#10;    });&#10;    // eslint-disable-next-line react-hooks/exhaustive-deps&#10;  }, [gem.id]);&#10;&#10;  // Se l'immagine carica dopo e non abbiamo ancora auto-scrollato, riallinea&#10;  const handleImageLoad = () =&gt; {&#10;    if (!hasAutoScrolled) scrollTitleIntoView(false);&#10;  };&#10;&#10;  const handleUserQuestionSubmit = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    if (userQuestion.trim()) {&#10;      onAddUserQuestion(gem.id, userQuestion.trim());&#10;      setUserQuestion('');&#10;    }&#10;  };&#10;&#10;  const handleShare = () =&gt; {&#10;    navigator.clipboard.writeText(`Scopri questa gemma di conoscenza: &quot;${gem.title}&quot; su Curiow!`);&#10;    alert(&quot;Contenuto copiato negli appunti!&quot;);&#10;  };&#10;&#10;  const handleFilterSelect = (filter: Filter) =&gt; {&#10;    if (onSelectFilter) onSelectFilter(filter);&#10;    if (filter.type === 'channel') {&#10;      onNavigate('feed');&#10;    }&#10;  };&#10;&#10;  // --- Rendering contenuti template ---&#10;  const renderMiniThread = (content: any) =&gt; {&#10;    const steps = Array.isArray(content.steps) ? content.steps : [];&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        &lt;div className=&quot;space-y-4&quot;&gt;&#10;          {steps.map((s: any, idx: number) =&gt; (&#10;            &lt;div key={idx} className=&quot;relative pl-10&quot;&gt;&#10;              &lt;div className=&quot;absolute left-0 top-0 flex flex-col items-center&quot;&gt;&#10;                &lt;div className=&quot;w-8 h-8 rounded-full bg-indigo-600 text-white flex items-center justify-center text-sm font-semibold shadow&quot;&gt;{idx+1}&lt;/div&gt;&#10;                {idx &lt; steps.length -1 &amp;&amp; &lt;div className=&quot;flex-1 w-px bg-gradient-to-b from-indigo-400 via-indigo-300 to-transparent mt-1&quot;/&gt;}&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-lg font-semibold text-slate-900 dark:text-white&quot;&gt;{s.title}&lt;/h3&gt;&#10;              &lt;p className=&quot;mt-1 text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{s.body}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;        {content.payoff &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-emerald-500/10 via-emerald-500/5 to-indigo-500/10 border border-emerald-400/30 dark:border-emerald-400/20&quot;&gt;&#10;            &lt;div className=&quot;flex items-start&quot;&gt;&#10;              &lt;SparklesIcon className=&quot;w-6 h-6 text-emerald-500 mr-3 mt-0.5&quot;/&gt;&#10;              &lt;div&gt;&#10;                &lt;p className=&quot;text-sm uppercase tracking-wide font-semibold text-emerald-600 dark:text-emerald-400&quot;&gt;Payoff&lt;/p&gt;&#10;                &lt;p className=&quot;mt-1 font-medium text-slate-900 dark:text-slate-100 leading-relaxed&quot;&gt;{content.payoff}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderMythVsReality = (content: any) =&gt; {&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-rose-50 dark:bg-rose-900/20 border border-rose-200 dark:border-rose-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-rose-600 dark:text-rose-300&quot;&gt;Mito&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 text-rose-800 dark:text-rose-200 font-medium leading-relaxed whitespace-pre-wrap&quot;&gt;{content.myth}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800 relative overflow-hidden&quot;&gt;&#10;            &lt;div className=&quot;absolute inset-0 pointer-events-none bg-[radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.15),transparent_60%)]&quot;/&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-emerald-600 dark:text-emerald-300&quot;&gt;Realtà&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 text-emerald-800 dark:text-emerald-200 font-medium leading-relaxed whitespace-pre-wrap&quot;&gt;{content.reality}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        {content.evidence &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400&quot;&gt;Evidenze&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.evidence}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.why_it_matters &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-indigo-500/10 via-violet-500/10 to-fuchsia-500/10 border border-indigo-300/30 dark:border-indigo-300/20&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-indigo-600 dark:text-indigo-300&quot;&gt;Perché conta&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 font-medium text-slate-900 dark:text-slate-100 leading-relaxed whitespace-pre-wrap&quot;&gt;{content.why_it_matters}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderFactCard = (content: any) =&gt; {&#10;    const facts: string[] = Array.isArray(content.facts) ? content.facts : [];&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-5&quot;&gt;&#10;        {content.hook &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-br from-indigo-600 to-violet-600 text-white shadow&quot;&gt;&#10;            &lt;p className=&quot;text-sm font-semibold tracking-wide uppercase opacity-90&quot;&gt;Dato Chiave&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-lg leading-snug font-bold whitespace-pre-wrap&quot;&gt;{content.hook}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {facts.length &gt; 0 &amp;&amp; (&#10;          &lt;div className=&quot;grid gap-3&quot;&gt;&#10;            {facts.map((f, i) =&gt; (&#10;              &lt;div key={i} className=&quot;p-4 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 flex&quot;&gt;&#10;                &lt;div className=&quot;mr-3 mt-0.5 text-indigo-500 font-semibold text-xs&quot;&gt;FACT {i+1}&lt;/div&gt;&#10;                &lt;p className=&quot;text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{f}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.implication &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-amber-50 dark:bg-amber-900/20 border border-amber-200 dark:border-amber-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-amber-700 dark:text-amber-300&quot;&gt;Implicazione&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-amber-900 dark:text-amber-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.implication}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.action &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-emerald-700 dark:text-emerald-300&quot;&gt;Azione&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm font-medium text-emerald-900 dark:text-emerald-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.action}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderProsCons = (content: any) =&gt; {&#10;    const pros: string[] = Array.isArray(content.pros) ? content.pros : [];&#10;    const cons: string[] = Array.isArray(content.cons) ? content.cons : [];&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        {content.scenario &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400&quot;&gt;Scenario&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.scenario}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-emerald-700 dark:text-emerald-300&quot;&gt;Pro&lt;/p&gt;&#10;            &lt;ul className=&quot;mt-2 space-y-2 text-sm text-emerald-900 dark:text-emerald-100&quot;&gt;&#10;              {pros.map((p,i)=&gt;(&lt;li key={i} className=&quot;flex&quot;&gt;&lt;span className=&quot;mr-2 text-emerald-500 font-semibold&quot;&gt;+&lt;/span&gt;&lt;span className=&quot;flex-1 whitespace-pre-wrap leading-relaxed&quot;&gt;{p}&lt;/span&gt;&lt;/li&gt;))}&#10;              {pros.length===0 &amp;&amp; &lt;li className=&quot;text-emerald-700/70 dark:text-emerald-300/60 italic&quot;&gt;Nessun pro indicato.&lt;/li&gt;}&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-rose-50 dark:bg-rose-900/20 border border-rose-200 dark:border-rose-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-rose-700 dark:text-rose-300&quot;&gt;Contro&lt;/p&gt;&#10;            &lt;ul className=&quot;mt-2 space-y-2 text-sm text-rose-900 dark:text-rose-100&quot;&gt;&#10;              {cons.map((c,i)=&gt;(&lt;li key={i} className=&quot;flex&quot;&gt;&lt;span className=&quot;mr-2 text-rose-500 font-semibold&quot;&gt;-&lt;/span&gt;&lt;span className=&quot;flex-1 whitespace-pre-wrap leading-relaxed&quot;&gt;{c}&lt;/span&gt;&lt;/li&gt;))}&#10;              {cons.length===0 &amp;&amp; &lt;li className=&quot;text-rose-700/70 dark:text-rose-300/60 italic&quot;&gt;Nessun contro indicato.&lt;/li&gt;}&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        {content.advice &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-indigo-500/10 via-sky-500/10 to-emerald-500/10 border border-indigo-300/30 dark:border-indigo-300/20&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-indigo-600 dark:text-indigo-300&quot;&gt;Sintesi / Consiglio&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 font-medium text-slate-900 dark:text-slate-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.advice}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderQuickExplainer = (content: any) =&gt; {&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        {content.analogy &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-indigo-600 text-white shadow&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide opacity-80&quot;&gt;Analogia Guida&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 text-lg font-bold leading-snug whitespace-pre-wrap&quot;&gt;{content.analogy}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.definition &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400&quot;&gt;Definizione&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.definition}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;          {content.example &amp;&amp; (&#10;            &lt;div className=&quot;p-4 rounded-lg bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;              &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-emerald-700 dark:text-emerald-300&quot;&gt;Esempio&lt;/p&gt;&#10;              &lt;p className=&quot;mt-1 text-sm text-emerald-900 dark:text-emerald-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.example}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;          {content.anti_example &amp;&amp; (&#10;            &lt;div className=&quot;p-4 rounded-lg bg-rose-50 dark:bg-rose-900/20 border border-rose-200 dark:border-rose-800&quot;&gt;&#10;              &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-rose-700 dark:text-rose-300&quot;&gt;Non È Questo&lt;/p&gt;&#10;              &lt;p className=&quot;mt-1 text-sm text-rose-900 dark:text-rose-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.anti_example}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;        {content.takeaway &amp;&amp; (&#10;            &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-fuchsia-500/10 via-violet-500/10 to-indigo-500/10 border border-fuchsia-300/30 dark:border-fuchsia-300/20&quot;&gt;&#10;              &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-fuchsia-600 dark:text-fuchsia-300&quot;&gt;Takeaway&lt;/p&gt;&#10;              &lt;p className=&quot;mt-2 font-medium text-slate-900 dark:text-slate-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.takeaway}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderStructuredContent = () =&gt; {&#10;    const content = (gem as any).content;&#10;    if (!content || !content.template) return null;&#10;    switch (content.template) {&#10;      case 'mini_thread':&#10;        return renderMiniThread(content);&#10;      case 'myth_vs_reality':&#10;        return renderMythVsReality(content);&#10;      case 'fact_card':&#10;        return renderFactCard(content);&#10;      case 'pros_cons':&#10;        return renderProsCons(content);&#10;      case 'quick_explainer':&#10;        return renderQuickExplainer(content);&#10;      default:&#10;        return null;&#10;    }&#10;  };&#10;  // --- fine rendering contenuti template ---&#10;&#10;  // Testo completo del saggio (nuovo: può essere in gem.content.description)&#10;  const fullDescription: string | undefined = (gem as any)?.content?.description;&#10;&#10;  return (&#10;    &lt;div className=&quot;max-w-2xl mx-auto&quot;&gt;&#10;        &lt;Header&#10;          isLoggedIn={isLoggedIn}&#10;          user={user}&#10;          onLogin={onLogin}&#10;          onLogout={onLogout}&#10;          onNavigate={onNavigate}&#10;          showFilters={true}&#10;          selectedFilter={selectedFilter}&#10;          onSelectFilter={handleFilterSelect}&#10;          channels={channels}&#10;          initialFiltersOpen={false}&#10;          onBack={onBack}&#10;        /&gt;&#10;        &lt;article&gt;&#10;            &lt;div className=&quot;p-5 sm:p-8&quot;&gt;&#10;                {/* Immagine prima */}&#10;                &lt;img ref={imgRef} src={gem.imageUrl} alt={gem.title} onLoad={handleImageLoad} className=&quot;w-full h-auto object-cover md:rounded-lg&quot; /&gt;&#10;                {/* Titolo sotto immagine (ancora) */}&#10;                &lt;h1 id=&quot;gem-title&quot; className=&quot;mt-4 text-2xl lg:text-3xl font-bold text-slate-900 dark:text-white leading-tight&quot;&gt;{gem.title}&lt;/h1&gt;&#10;&#10;                &lt;div className=&quot;mt-4 flex flex-wrap gap-x-4 gap-y-2 items-center&quot;&gt;&#10;                    &lt;button&#10;                        onClick={() =&gt; isFavorite ? onRemoveRequest(gem.id) : onSaveRequest(gem.id)}&#10;                        className=&quot;flex items-center space-x-1.5 text-slate-600 dark:text-slate-300 hover:text-red-500 dark:hover:text-red-400 transition-colors&quot;&#10;                    &gt;&#10;                        &lt;HeartIcon className={`w-6 h-6 ${isFavorite ? 'fill-red-500 text-red-500' : ''}`} /&gt;&#10;                        &lt;span className=&quot;text-sm font-medium&quot;&gt;{isFavorite ? 'Rimuovi' : 'Salva'}&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                        onClick={handleShare}&#10;                        className=&quot;flex items-center space-x-1.5 text-slate-600 dark:text-slate-300 hover:text-indigo-500 dark:hover:text-indigo-400 transition-colors&quot;&#10;                    &gt;&#10;                        &lt;ShareIcon className=&quot;w-6 h-6&quot; /&gt;&#10;                        &lt;span className=&quot;text-sm font-medium&quot;&gt;Condividi&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;                {gem.tags &amp;&amp; gem.tags.length &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;mt-4 flex flex-wrap gap-2 items-center&quot;&gt;&#10;                        &lt;TagIcon className=&quot;w-5 h-5 text-slate-400 dark:text-slate-500&quot;/&gt;&#10;                        {gem.tags.map(tag =&gt; (&#10;                            &lt;button &#10;                                key={tag} &#10;                                onClick={() =&gt; onTagSelect(tag)}&#10;                                className=&quot;px-2.5 py-1 bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-300 rounded-full text-xs font-semibold hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors&quot;&#10;                            &gt;&#10;                                {tag}&#10;                            &lt;/button&gt;&#10;                        ))}&#10;                    &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Tabs Tips / Saggio */}&#10;                &lt;div className=&quot;mt-8 flex justify-end&quot;&gt;&#10;                  &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-slate-100 dark:bg-slate-800 p-1 shadow-inner ring-1 ring-slate-200/60 dark:ring-slate-700/60&quot;&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab('tips')}&#10;                      aria-pressed={activeTab==='tips'}&#10;                      title=&quot;Vista Tips (strutturata)&quot;&#10;                      className={`relative flex items-center justify-center w-9 h-9 rounded-full transition-all focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500 group ${activeTab==='tips' ? 'bg-gradient-to-tr from-indigo-500 to-violet-500 text-white shadow-md' : 'text-slate-500 dark:text-slate-400 hover:text-indigo-600 dark:hover:text-indigo-300'}`}&#10;                    &gt;&#10;                      &lt;LightBulbIcon className=&quot;w-5 h-5&quot; /&gt;&#10;                      {activeTab==='tips' &amp;&amp; &lt;span className=&quot;absolute -bottom-1 h-1 w-4 rounded-full bg-white/70 dark:bg-white/40&quot;/&gt;}&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab('saggio')}&#10;                      aria-pressed={activeTab==='saggio'}&#10;                      title=&quot;Vista Saggio (testo completo)&quot;&#10;                      className={`relative flex items-center justify-center w-9 h-9 rounded-full transition-all focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500 group ${activeTab==='saggio' ? 'bg-gradient-to-tr from-indigo-500 to-violet-500 text-white shadow-md' : 'text-slate-500 dark:text-slate-400 hover:text-indigo-600 dark:hover:text-indigo-300'}`}&#10;                    &gt;&#10;                      &lt;BookOpenIcon className=&quot;w-5 h-5&quot; /&gt;&#10;                      {activeTab==='saggio' &amp;&amp; &lt;span className=&quot;absolute -bottom-1 h-1 w-4 rounded-full bg-white/70 dark:bg-white/40&quot;/&gt;}&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;mt-6 relative&quot; style={{ height: contentHeight ? contentHeight : undefined }}&gt;&#10;                  {/* Pannello Tips */}&#10;                  &lt;div&#10;                    ref={tipsRef}&#10;                    className={`absolute inset-0 transition-opacity duration-400 ease-in-out ${activeTab==='tips' ? 'opacity-100' : 'opacity-0 pointer-events-none'} overflow-visible`}&#10;                  &gt;&#10;                    {(() =&gt; { const structuredContent = renderStructuredContent(); return structuredContent ? structuredContent : (&#10;                      &lt;p className=&quot;text-slate-700 dark:text-slate-300 leading-relaxed whitespace-pre-wrap&quot;&gt;{fullDescription || ''}&lt;/p&gt;&#10;                    ); })()}&#10;                  &lt;/div&gt;&#10;                  {/* Pannello Saggio */}&#10;                  &lt;div&#10;                    ref={saggioRef}&#10;                    className={`absolute inset-0 transition-opacity duration-400 ease-in-out ${activeTab==='saggio' ? 'opacity-100' : 'opacity-0 pointer-events-none'} overflow-visible`}&#10;                  &gt;&#10;                    {fullDescription ? (&#10;                      &lt;p className=&quot;text-slate-700 dark:text-slate-300 leading-relaxed whitespace-pre-wrap&quot;&gt;{fullDescription}&lt;/p&gt;&#10;                    ) : (&#10;                      &lt;p className=&quot;italic text-slate-500 dark:text-slate-400&quot;&gt;Nessun testo disponibile.&lt;/p&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Fonti */}&#10;                {(() =&gt; { const sources = (gem as any).search_results &amp;&amp; (gem as any).search_results.length &gt; 0 ? (gem as any).search_results : gem.sources; return sources &amp;&amp; sources.length &gt; 0 &amp;&amp; (&#10;                    &lt;section className=&quot;mt-10 border-t border-slate-200 dark:border-slate-700 pt-6&quot;&gt;&#10;                         &lt;button&#10;                            onClick={() =&gt; setIsSourcesOpen(!isSourcesOpen)}&#10;                            className=&quot;w-full flex justify-between items-center text-left&quot;&#10;                            aria-expanded={isSourcesOpen}&#10;                         &gt;&#10;                            &lt;h2 className=&quot;text-lg font-bold text-slate-900 dark:text-white flex items-center&quot;&gt;&#10;                                &lt;LinkIcon className=&quot;w-5 h-5 mr-2 text-slate-500&quot;/&gt;&#10;                                Fonti&#10;                            &lt;/h2&gt;&#10;                            &lt;ChevronDownIcon className={`w-5 h-5 text-slate-500 transition-transform ${isSourcesOpen ? 'rotate-180' : ''}`} /&gt;&#10;                        &lt;/button&gt;&#10;                        {isSourcesOpen &amp;&amp; (&#10;                            &lt;ul className=&quot;mt-3 space-y-2&quot;&gt;&#10;                                {sources.map((source: any, index: number) =&gt; (&#10;                                    &lt;li key={index}&gt;&#10;                                        &lt;a &#10;                                            href={source.uri} &#10;                                            target=&quot;_blank&quot; &#10;                                            rel=&quot;noopener noreferrer&quot; &#10;                                            className=&quot;text-sm text-indigo-600 dark:text-indigo-400 hover:underline break-all&quot;&#10;                                        &gt;&#10;                                        {index+1}. {source.title || source.uri}&#10;                                        &lt;/a&gt;&#10;                                    &lt;/li&gt;&#10;                                ))}&#10;                            &lt;/ul&gt;&#10;                        )}&#10;                    &lt;/section&gt;&#10;                ); })()}&#10;            &lt;/div&gt;&#10;        &lt;/article&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default GemDetailView;&#10;" />
              <option name="updatedContent" value="import React, { useState, useEffect, useRef } from 'react';&#10;import { Gem, UserQuestion, User, Filter, Channel } from '../types';&#10;import { ChevronLeftIcon, HeartIcon, ShareIcon, PaperAirplaneIcon, SparklesIcon, PlusCircleIcon, TagIcon, LinkIcon, ChevronDownIcon, LightBulbIcon, BookOpenIcon } from './icons';&#10;import Header from './Header';&#10;&#10;interface GemDetailViewProps {&#10;  gem: Gem;&#10;  isFavorite: boolean;&#10;  isLoggedIn: boolean;&#10;  user?: User | null;&#10;  onBack: () =&gt; void;&#10;  onSaveRequest: (gemId: string) =&gt; void;&#10;  onRemoveRequest: (gemId: string) =&gt; void;&#10;  onAddUserQuestion: (gemId: string, question: string) =&gt; void;&#10;  onTagSelect: (tag: string) =&gt; void;&#10;  onLogin: () =&gt; void;&#10;  onLogout: () =&gt; void;&#10;  onNavigate: (view: 'feed' | 'saved' | 'profile' | 'dashboard' | 'topics') =&gt; void;&#10;  selectedFilter?: Filter;&#10;  onSelectFilter?: (filter: Filter) =&gt; void;&#10;  channels?: Channel[];&#10;}&#10;&#10;const UserQuestionItem: React.FC&lt;{ userQuestion: UserQuestion }&gt; = ({ userQuestion }) =&gt; (&#10;    &lt;div className=&quot;mt-4 p-4 bg-slate-100 dark:bg-slate-800 rounded-lg&quot;&gt;&#10;        &lt;p className=&quot;font-semibold text-sm text-slate-600 dark:text-slate-300&quot;&gt;Domanda: &lt;span className=&quot;font-normal&quot;&gt;{userQuestion.question}&lt;/span&gt;&lt;/p&gt;&#10;        &lt;div className=&quot;mt-2 text-sm text-slate-800 dark:text-slate-200&quot;&gt;&#10;            {userQuestion.isGenerating ? (&#10;                 &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;SparklesIcon className=&quot;w-4 h-4 animate-pulse text-indigo-400&quot; /&gt;&#10;                    &lt;span&gt;Generazione risposta...&lt;/span&gt;&#10;                &lt;/div&gt;&#10;            ) : (&#10;                &lt;p className=&quot;whitespace-pre-wrap&quot;&gt;{userQuestion.answer}&lt;/p&gt;&#10;            )}&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;);&#10;&#10;const GemDetailView: React.FC&lt;GemDetailViewProps&gt; = ({ gem, isFavorite, onBack, onSaveRequest, onRemoveRequest, onAddUserQuestion, onTagSelect, isLoggedIn, user, onLogin, onLogout, onNavigate, selectedFilter, onSelectFilter, channels }) =&gt; {&#10;  const [userQuestion, setUserQuestion] = useState('');&#10;  const [isSourcesOpen, setIsSourcesOpen] = useState(false);&#10;  const [hasAutoScrolled, setHasAutoScrolled] = useState(false);&#10;  const imgRef = useRef&lt;HTMLImageElement | null&gt;(null);&#10;  // nuovo stato per tab&#10;  const [activeTab, setActiveTab] = useState&lt;'tips' | 'saggio'&gt;('tips');&#10;  // refs per animazione cross-fade&#10;  const tipsRef = useRef&lt;HTMLDivElement | null&gt;(null);&#10;  const saggioRef = useRef&lt;HTMLDivElement | null&gt;(null);&#10;  const [contentHeight, setContentHeight] = useState&lt;number&gt;(0);&#10;&#10;  // funzione misura altezza contenuto attivo&#10;  const measureActiveHeight = () =&gt; {&#10;    const el = activeTab === 'tips' ? tipsRef.current : saggioRef.current;&#10;    if (el) {&#10;      // usa scrollHeight per includere overflow&#10;      const h = el.scrollHeight;&#10;      setContentHeight(h);&#10;    }&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    // misura dopo cambio tab / gem&#10;    requestAnimationFrame(() =&gt; measureActiveHeight());&#10;  }, [activeTab, gem.id]);&#10;&#10;  useEffect(() =&gt; {&#10;    // misura al resize per mantenere altezza coerente&#10;    const onResize = () =&gt; measureActiveHeight();&#10;    window.addEventListener('resize', onResize);&#10;    return () =&gt; window.removeEventListener('resize', onResize);&#10;  }, []);&#10;&#10;  // Funzione per scrollare il titolo allineandolo appena sotto l'header sticky&#10;  const scrollTitleIntoView = (smooth = false) =&gt; {&#10;    const titleEl = document.getElementById('gem-title');&#10;    if (!titleEl) return;&#10;    const headerEl = document.querySelector('header');&#10;    const headerHeight = headerEl ? (headerEl as HTMLElement).offsetHeight : 0;&#10;    const buffer = 8; // piccolo margine&#10;    const target = titleEl.getBoundingClientRect().top + window.scrollY - headerHeight - buffer;&#10;    window.scrollTo({ top: target &gt;= 0 ? target : 0, behavior: smooth ? 'smooth' : 'auto' });&#10;    setHasAutoScrolled(true);&#10;  };&#10;&#10;  // Scroll iniziale dopo mount/cambio gem (post layout)&#10;  useEffect(() =&gt; {&#10;    setHasAutoScrolled(false);&#10;    // Usa rAF per attendere layout, poi ulteriore timeout breve per carichi asincroni minimi&#10;    requestAnimationFrame(() =&gt; {&#10;      scrollTitleIntoView(false);&#10;      setTimeout(() =&gt; { if (!hasAutoScrolled) scrollTitleIntoView(false); }, 60);&#10;    });&#10;    // eslint-disable-next-line react-hooks/exhaustive-deps&#10;  }, [gem.id]);&#10;&#10;  // Se l'immagine carica dopo e non abbiamo ancora auto-scrollato, riallinea&#10;  const handleImageLoad = () =&gt; {&#10;    if (!hasAutoScrolled) scrollTitleIntoView(false);&#10;  };&#10;&#10;  const handleUserQuestionSubmit = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    if (userQuestion.trim()) {&#10;      onAddUserQuestion(gem.id, userQuestion.trim());&#10;      setUserQuestion('');&#10;    }&#10;  };&#10;&#10;  const handleShare = () =&gt; {&#10;    navigator.clipboard.writeText(`Scopri questa gemma di conoscenza: &quot;${gem.title}&quot; su Curiow!`);&#10;    alert(&quot;Contenuto copiato negli appunti!&quot;);&#10;  };&#10;&#10;  const handleFilterSelect = (filter: Filter) =&gt; {&#10;    if (onSelectFilter) onSelectFilter(filter);&#10;    if (filter.type === 'channel') {&#10;      onNavigate('feed');&#10;    }&#10;  };&#10;&#10;  // --- Rendering contenuti template ---&#10;  const renderMiniThread = (content: any) =&gt; {&#10;    const steps = Array.isArray(content.steps) ? content.steps : [];&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        &lt;div className=&quot;space-y-4&quot;&gt;&#10;          {steps.map((s: any, idx: number) =&gt; (&#10;            &lt;div key={idx} className=&quot;relative pl-10&quot;&gt;&#10;              &lt;div className=&quot;absolute left-0 top-0 flex flex-col items-center&quot;&gt;&#10;                &lt;div className=&quot;w-8 h-8 rounded-full bg-indigo-600 text-white flex items-center justify-center text-sm font-semibold shadow&quot;&gt;{idx+1}&lt;/div&gt;&#10;                {idx &lt; steps.length -1 &amp;&amp; &lt;div className=&quot;flex-1 w-px bg-gradient-to-b from-indigo-400 via-indigo-300 to-transparent mt-1&quot;/&gt;}&#10;              &lt;/div&gt;&#10;              &lt;h3 className=&quot;text-lg font-semibold text-slate-900 dark:text-white&quot;&gt;{s.title}&lt;/h3&gt;&#10;              &lt;p className=&quot;mt-1 text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{s.body}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;        {content.payoff &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-emerald-500/10 via-emerald-500/5 to-indigo-500/10 border border-emerald-400/30 dark:border-emerald-400/20&quot;&gt;&#10;            &lt;div className=&quot;flex items-start&quot;&gt;&#10;              &lt;SparklesIcon className=&quot;w-6 h-6 text-emerald-500 mr-3 mt-0.5&quot;/&gt;&#10;              &lt;div&gt;&#10;                &lt;p className=&quot;text-sm uppercase tracking-wide font-semibold text-emerald-600 dark:text-emerald-400&quot;&gt;Payoff&lt;/p&gt;&#10;                &lt;p className=&quot;mt-1 font-medium text-slate-900 dark:text-slate-100 leading-relaxed&quot;&gt;{content.payoff}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderMythVsReality = (content: any) =&gt; {&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-rose-50 dark:bg-rose-900/20 border border-rose-200 dark:border-rose-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-rose-600 dark:text-rose-300&quot;&gt;Mito&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 text-rose-800 dark:text-rose-200 font-medium leading-relaxed whitespace-pre-wrap&quot;&gt;{content.myth}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800 relative overflow-hidden&quot;&gt;&#10;            &lt;div className=&quot;absolute inset-0 pointer-events-none bg-[radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.15),transparent_60%)]&quot;/&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-emerald-600 dark:text-emerald-300&quot;&gt;Realtà&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 text-emerald-800 dark:text-emerald-200 font-medium leading-relaxed whitespace-pre-wrap&quot;&gt;{content.reality}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        {content.evidence &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400&quot;&gt;Evidenze&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.evidence}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.why_it_matters &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-indigo-500/10 via-violet-500/10 to-fuchsia-500/10 border border-indigo-300/30 dark:border-indigo-300/20&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-indigo-600 dark:text-indigo-300&quot;&gt;Perché conta&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 font-medium text-slate-900 dark:text-slate-100 leading-relaxed whitespace-pre-wrap&quot;&gt;{content.why_it_matters}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderFactCard = (content: any) =&gt; {&#10;    const facts: string[] = Array.isArray(content.facts) ? content.facts : [];&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-5&quot;&gt;&#10;        {content.hook &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-br from-indigo-600 to-violet-600 text-white shadow&quot;&gt;&#10;            &lt;p className=&quot;text-sm font-semibold tracking-wide uppercase opacity-90&quot;&gt;Dato Chiave&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-lg leading-snug font-bold whitespace-pre-wrap&quot;&gt;{content.hook}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {facts.length &gt; 0 &amp;&amp; (&#10;          &lt;div className=&quot;grid gap-3&quot;&gt;&#10;            {facts.map((f, i) =&gt; (&#10;              &lt;div key={i} className=&quot;p-4 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 flex&quot;&gt;&#10;                &lt;div className=&quot;mr-3 mt-0.5 text-indigo-500 font-semibold text-xs&quot;&gt;FACT {i+1}&lt;/div&gt;&#10;                &lt;p className=&quot;text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{f}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.implication &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-amber-50 dark:bg-amber-900/20 border border-amber-200 dark:border-amber-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-amber-700 dark:text-amber-300&quot;&gt;Implicazione&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-amber-900 dark:text-amber-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.implication}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.action &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-emerald-700 dark:text-emerald-300&quot;&gt;Azione&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm font-medium text-emerald-900 dark:text-emerald-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.action}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderProsCons = (content: any) =&gt; {&#10;    const pros: string[] = Array.isArray(content.pros) ? content.pros : [];&#10;    const cons: string[] = Array.isArray(content.cons) ? content.cons : [];&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        {content.scenario &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-slate-50 dark:bg-slate-800 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400&quot;&gt;Scenario&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.scenario}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-emerald-700 dark:text-emerald-300&quot;&gt;Pro&lt;/p&gt;&#10;            &lt;ul className=&quot;mt-2 space-y-2 text-sm text-emerald-900 dark:text-emerald-100&quot;&gt;&#10;              {pros.map((p,i)=&gt;(&lt;li key={i} className=&quot;flex&quot;&gt;&lt;span className=&quot;mr-2 text-emerald-500 font-semibold&quot;&gt;+&lt;/span&gt;&lt;span className=&quot;flex-1 whitespace-pre-wrap leading-relaxed&quot;&gt;{p}&lt;/span&gt;&lt;/li&gt;))}&#10;              {pros.length===0 &amp;&amp; &lt;li className=&quot;text-emerald-700/70 dark:text-emerald-300/60 italic&quot;&gt;Nessun pro indicato.&lt;/li&gt;}&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;p-5 rounded-xl bg-rose-50 dark:bg-rose-900/20 border border-rose-200 dark:border-rose-800&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-bold uppercase tracking-wide text-rose-700 dark:text-rose-300&quot;&gt;Contro&lt;/p&gt;&#10;            &lt;ul className=&quot;mt-2 space-y-2 text-sm text-rose-900 dark:text-rose-100&quot;&gt;&#10;              {cons.map((c,i)=&gt;(&lt;li key={i} className=&quot;flex&quot;&gt;&lt;span className=&quot;mr-2 text-rose-500 font-semibold&quot;&gt;-&lt;/span&gt;&lt;span className=&quot;flex-1 whitespace-pre-wrap leading-relaxed&quot;&gt;{c}&lt;/span&gt;&lt;/li&gt;))}&#10;              {cons.length===0 &amp;&amp; &lt;li className=&quot;text-rose-700/70 dark:text-rose-300/60 italic&quot;&gt;Nessun contro indicato.&lt;/li&gt;}&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        {content.advice &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-indigo-500/10 via-sky-500/10 to-emerald-500/10 border border-indigo-300/30 dark:border-indigo-300/20&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-indigo-600 dark:text-indigo-300&quot;&gt;Sintesi / Consiglio&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 font-medium text-slate-900 dark:text-slate-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.advice}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderQuickExplainer = (content: any) =&gt; {&#10;    return (&#10;      &lt;div className=&quot;mt-6 space-y-6&quot;&gt;&#10;        {content.analogy &amp;&amp; (&#10;          &lt;div className=&quot;p-5 rounded-xl bg-indigo-600 text-white shadow&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide opacity-80&quot;&gt;Analogia Guida&lt;/p&gt;&#10;            &lt;p className=&quot;mt-2 text-lg font-bold leading-snug whitespace-pre-wrap&quot;&gt;{content.analogy}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        {content.definition &amp;&amp; (&#10;          &lt;div className=&quot;p-4 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700&quot;&gt;&#10;            &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-slate-500 dark:text-slate-400&quot;&gt;Definizione&lt;/p&gt;&#10;            &lt;p className=&quot;mt-1 text-sm text-slate-700 dark:text-slate-300 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.definition}&lt;/p&gt;&#10;          &lt;/div&gt;&#10;        )}&#10;        &lt;div className=&quot;grid md:grid-cols-2 gap-4&quot;&gt;&#10;          {content.example &amp;&amp; (&#10;            &lt;div className=&quot;p-4 rounded-lg bg-emerald-50 dark:bg-emerald-900/20 border border-emerald-200 dark:border-emerald-800&quot;&gt;&#10;              &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-emerald-700 dark:text-emerald-300&quot;&gt;Esempio&lt;/p&gt;&#10;              &lt;p className=&quot;mt-1 text-sm text-emerald-900 dark:text-emerald-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.example}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;          {content.anti_example &amp;&amp; (&#10;            &lt;div className=&quot;p-4 rounded-lg bg-rose-50 dark:bg-rose-900/20 border border-rose-200 dark:border-rose-800&quot;&gt;&#10;              &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-rose-700 dark:text-rose-300&quot;&gt;Non È Questo&lt;/p&gt;&#10;              &lt;p className=&quot;mt-1 text-sm text-rose-900 dark:text-rose-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.anti_example}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/div&gt;&#10;        {content.takeaway &amp;&amp; (&#10;            &lt;div className=&quot;p-5 rounded-xl bg-gradient-to-r from-fuchsia-500/10 via-violet-500/10 to-indigo-500/10 border border-fuchsia-300/30 dark:border-fuchsia-300/20&quot;&gt;&#10;              &lt;p className=&quot;text-xs font-semibold uppercase tracking-wide text-fuchsia-600 dark:text-fuchsia-300&quot;&gt;Takeaway&lt;/p&gt;&#10;              &lt;p className=&quot;mt-2 font-medium text-slate-900 dark:text-slate-100 whitespace-pre-wrap leading-relaxed&quot;&gt;{content.takeaway}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        )}&#10;      &lt;/div&gt;&#10;    );&#10;  };&#10;&#10;  const renderStructuredContent = () =&gt; {&#10;    const content = (gem as any).content;&#10;    if (!content || !content.template) return null;&#10;    switch (content.template) {&#10;      case 'mini_thread':&#10;        return renderMiniThread(content);&#10;      case 'myth_vs_reality':&#10;        return renderMythVsReality(content);&#10;      case 'fact_card':&#10;        return renderFactCard(content);&#10;      case 'pros_cons':&#10;        return renderProsCons(content);&#10;      case 'quick_explainer':&#10;        return renderQuickExplainer(content);&#10;      default:&#10;        return null;&#10;    }&#10;  };&#10;  // --- fine rendering contenuti template ---&#10;&#10;  // Testo completo del saggio (nuovo: può essere in gem.content.description)&#10;  const fullDescription: string | undefined = (gem as any)?.content?.description;&#10;&#10;  // Utility: segmentazione in paragrafi leggibili (solo visualizzazione)&#10;  const buildParagraphs = (text?: string): string[] =&gt; {&#10;    if (!text) return [];&#10;    const normalized = text.replace(/\r\n?/g, '\n').trim();&#10;    // Se l'autore ha già usato paragrafi (doppie newline) rispetta quelli&#10;    const explicit = normalized.split(/\n{2,}/).map(p =&gt; p.trim()).filter(Boolean);&#10;    if (explicit.length &gt; 1) return explicit;&#10;    // Altrimenti suddividi per punto + spazio + Maiuscola (mantieni il punto)&#10;    const periodSplit = normalized&#10;      // comprime whitespace multiplo a singolo spazio per consistenza&#10;      .replace(/\n+/g, ' ')&#10;      .replace(/\s{2,}/g, ' ')&#10;      .split(/(?&lt;=\.)\s+(?=[A-ZÀ-ÖØ-Ý])/)&#10;      .map(s =&gt; s.trim())&#10;      .filter(Boolean);&#10;    if (periodSplit.length &gt; 1) return periodSplit;&#10;    // fallback: ritorna intero blocco&#10;    return [normalized];&#10;  };&#10;&#10;  const paragraphs = buildParagraphs(fullDescription);&#10;&#10;  // Calcolo tempo di lettura (200 wpm medio)&#10;  const readingTime = (() =&gt; {&#10;    if (!fullDescription) return null;&#10;    const words = fullDescription.trim().split(/\s+/).filter(Boolean).length;&#10;    const WPM = 200; // media adulti IT&#10;    const minutesFloat = words / WPM;&#10;    const minutes = Math.floor(minutesFloat);&#10;    const seconds = Math.round((minutesFloat - minutes) * 60);&#10;    const display = minutes &lt; 1 ? `${seconds &lt; 10 ? '~15s' : `${seconds}s`}` : `${minutes} min${minutes === 1 ? '' : ''}${seconds &gt;= 30 &amp;&amp; minutes &lt; 10 ? ' +' : ''}`;&#10;    return { words, minutes, seconds, display };&#10;  })();&#10;&#10;  return (&#10;    &lt;div className=&quot;max-w-2xl mx-auto&quot;&gt;&#10;        &lt;Header&#10;          isLoggedIn={isLoggedIn}&#10;          user={user}&#10;          onLogin={onLogin}&#10;          onLogout={onLogout}&#10;          onNavigate={onNavigate}&#10;          showFilters={true}&#10;          selectedFilter={selectedFilter}&#10;          onSelectFilter={handleFilterSelect}&#10;          channels={channels}&#10;          initialFiltersOpen={false}&#10;          onBack={onBack}&#10;        /&gt;&#10;        &lt;article&gt;&#10;            &lt;div className=&quot;p-5 sm:p-8&quot;&gt;&#10;                {/* Immagine prima */}&#10;                &lt;img ref={imgRef} src={gem.imageUrl} alt={gem.title} onLoad={handleImageLoad} className=&quot;w-full h-auto object-cover md:rounded-lg&quot; /&gt;&#10;                {/* Titolo sotto immagine (ancora) */}&#10;                &lt;h1 id=&quot;gem-title&quot; className=&quot;mt-4 text-2xl lg:text-3xl font-bold text-slate-900 dark:text-white leading-tight&quot;&gt;{gem.title}&lt;/h1&gt;&#10;&#10;                &lt;div className=&quot;mt-4 flex flex-wrap gap-x-4 gap-y-2 items-center&quot;&gt;&#10;                    &lt;button&#10;                        onClick={() =&gt; isFavorite ? onRemoveRequest(gem.id) : onSaveRequest(gem.id)}&#10;                        className=&quot;flex items-center space-x-1.5 text-slate-600 dark:text-slate-300 hover:text-red-500 dark:hover:text-red-400 transition-colors&quot;&#10;                    &gt;&#10;                        &lt;HeartIcon className={`w-6 h-6 ${isFavorite ? 'fill-red-500 text-red-500' : ''}`} /&gt;&#10;                        &lt;span className=&quot;text-sm font-medium&quot;&gt;{isFavorite ? 'Rimuovi' : 'Salva'}&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                        onClick={handleShare}&#10;                        className=&quot;flex items-center space-x-1.5 text-slate-600 dark:text-slate-300 hover:text-indigo-500 dark:hover:text-indigo-400 transition-colors&quot;&#10;                    &gt;&#10;                        &lt;ShareIcon className=&quot;w-6 h-6&quot; /&gt;&#10;                        &lt;span className=&quot;text-sm font-medium&quot;&gt;Condividi&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;                {gem.tags &amp;&amp; gem.tags.length &gt; 0 &amp;&amp; (&#10;                    &lt;div className=&quot;mt-4 flex flex-wrap gap-2 items-center&quot;&gt;&#10;                        &lt;TagIcon className=&quot;w-5 h-5 text-slate-400 dark:text-slate-500&quot;/&gt;&#10;                        {gem.tags.map(tag =&gt; (&#10;                            &lt;button &#10;                                key={tag} &#10;                                onClick={() =&gt; onTagSelect(tag)}&#10;                                className=&quot;px-2.5 py-1 bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-300 rounded-full text-xs font-semibold hover:bg-slate-200 dark:hover:bg-slate-600 transition-colors&quot;&#10;                            &gt;&#10;                                {tag}&#10;                            &lt;/button&gt;&#10;                        ))}&#10;                    &lt;/div&gt;&#10;                )}&#10;&#10;                {/* Tabs Tips / Saggio */}&#10;                &lt;div className=&quot;mt-8 flex justify-end&quot;&gt;&#10;                  &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-slate-100 dark:bg-slate-800 p-1 shadow-inner ring-1 ring-slate-200/60 dark:ring-slate-700/60&quot;&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab('tips')}&#10;                      aria-pressed={activeTab==='tips'}&#10;                      title=&quot;Vista Tips (strutturata)&quot;&#10;                      className={`relative flex items-center justify-center w-9 h-9 rounded-full transition-all focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500 group ${activeTab==='tips' ? 'bg-gradient-to-tr from-indigo-500 to-violet-500 text-white shadow-md' : 'text-slate-500 dark:text-slate-400 hover:text-indigo-600 dark:hover:text-indigo-300'}`}&#10;                    &gt;&#10;                      &lt;LightBulbIcon className=&quot;w-5 h-5&quot; /&gt;&#10;                      {activeTab==='tips' &amp;&amp; &lt;span className=&quot;absolute -bottom-1 h-1 w-4 rounded-full bg-white/70 dark:bg-white/40&quot;/&gt;}&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; setActiveTab('saggio')}&#10;                      aria-pressed={activeTab==='saggio'}&#10;                      title=&quot;Vista Saggio (testo completo)&quot;&#10;                      className={`relative flex items-center justify-center w-9 h-9 rounded-full transition-all focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500 group ${activeTab==='saggio' ? 'bg-gradient-to-tr from-indigo-500 to-violet-500 text-white shadow-md' : 'text-slate-500 dark:text-slate-400 hover:text-indigo-600 dark:hover:text-indigo-300'}`}&#10;                    &gt;&#10;                      &lt;BookOpenIcon className=&quot;w-5 h-5&quot; /&gt;&#10;                      {activeTab==='saggio' &amp;&amp; &lt;span className=&quot;absolute -bottom-1 h-1 w-4 rounded-full bg-white/70 dark:bg-white/40&quot;/&gt;}&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;mt-6 relative&quot; style={{ height: contentHeight ? contentHeight : undefined }}&gt;&#10;                  {/* Pannello Tips */}&#10;                  &lt;div&#10;                    ref={tipsRef}&#10;                    className={`absolute inset-0 transition-opacity duration-400 ease-in-out ${activeTab==='tips' ? 'opacity-100' : 'opacity-0 pointer-events-none'} overflow-visible`}&#10;                  &gt;&#10;                    {(() =&gt; { const structuredContent = renderStructuredContent(); return structuredContent ? structuredContent : (&#10;                      &lt;p className=&quot;text-slate-700 dark:text-slate-300 leading-relaxed whitespace-pre-wrap&quot;&gt;{fullDescription || ''}&lt;/p&gt;&#10;                    ); })()}&#10;                  &lt;/div&gt;&#10;                  {/* Pannello Saggio */}&#10;                  &lt;div&#10;                    ref={saggioRef}&#10;                    className={`absolute inset-0 transition-opacity duration-400 ease-in-out ${activeTab==='saggio' ? 'opacity-100' : 'opacity-0 pointer-events-none'} overflow-visible`}&#10;                  &gt;&#10;                    {fullDescription ? (&#10;                      paragraphs.length &gt; 0 ? (&#10;                        &lt;div className=&quot;prose prose-slate dark:prose-invert max-w-none&quot;&gt;&#10;                          {readingTime &amp;&amp; (&#10;                            &lt;div className=&quot;mb-6 flex items-center text-xs uppercase tracking-wide text-slate-500 dark:text-slate-400 gap-3&quot;&gt;&#10;                              &lt;span className=&quot;inline-flex items-center px-2 py-1 rounded-full bg-slate-200 dark:bg-slate-700 text-slate-600 dark:text-slate-300 font-semibold&quot;&gt;⏱ {readingTime.display}&lt;/span&gt;&#10;                              &lt;span className=&quot;text-slate-400 dark:text-slate-500&quot;&gt;{readingTime.words} parole&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                          )}&#10;                          {paragraphs.map((p, i) =&gt; {&#10;                            const isKey = p.includes(':') || /—/.test(p);&#10;                            return (&#10;                              &lt;p&#10;                                key={i}&#10;                                className={`text-base md:text-lg leading-relaxed md:leading-loose tracking-[0.015em] text-slate-700 dark:text-slate-300 text-justify hyphens-auto break-words mb-5 last:mb-0 ${i===0 ? 'first-letter:text-4xl first-letter:font-semibold first-letter:float-left first-letter:mr-2 first-letter:mt-1 first-letter:leading-[0.9]' : ''} ${isKey ? 'border-l-2 border-indigo-300 dark:border-indigo-500 pl-3 bg-indigo-50/40 dark:bg-indigo-500/5 rounded-sm' : ''}`}&#10;                                style={{ hyphens: 'auto' }}&#10;                              &gt;&#10;                                {p}&#10;                              &lt;/p&gt;&#10;                            );&#10;                          })}&#10;                        &lt;/div&gt;&#10;                      ) : (&#10;                        &lt;p className=&quot;text-slate-700 dark:text-slate-300 leading-relaxed whitespace-pre-wrap&quot;&gt;{fullDescription}&lt;/p&gt;&#10;                      )&#10;                    ) : (&#10;                      &lt;p className=&quot;italic text-slate-500 dark:text-slate-400&quot;&gt;Nessun testo disponibile.&lt;/p&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                {/* Fonti */}&#10;                {(() =&gt; { const sources = (gem as any).search_results &amp;&amp; (gem as any).search_results.length &gt; 0 ? (gem as any).search_results : gem.sources; return sources &amp;&amp; sources.length &gt; 0 &amp;&amp; (&#10;                    &lt;section className=&quot;mt-10 border-t border-slate-200 dark:border-slate-700 pt-6&quot;&gt;&#10;                         &lt;button&#10;                            onClick={() =&gt; setIsSourcesOpen(!isSourcesOpen)}&#10;                            className=&quot;w-full flex justify-between items-center text-left&quot;&#10;                            aria-expanded={isSourcesOpen}&#10;                         &gt;&#10;                            &lt;h2 className=&quot;text-lg font-bold text-slate-900 dark:text-white flex items-center&quot;&gt;&#10;                                &lt;LinkIcon className=&quot;w-5 h-5 mr-2 text-slate-500&quot;/&gt;&#10;                                Fonti&#10;                            &lt;/h2&gt;&#10;                            &lt;ChevronDownIcon className={`w-5 h-5 text-slate-500 transition-transform ${isSourcesOpen ? 'rotate-180' : ''}`} /&gt;&#10;                        &lt;/button&gt;&#10;                        {isSourcesOpen &amp;&amp; (&#10;                            &lt;ul className=&quot;mt-3 space-y-2&quot;&gt;&#10;                                {sources.map((source: any, index: number) =&gt; (&#10;                                    &lt;li key={index}&gt;&#10;                                        &lt;a &#10;                                            href={source.uri} &#10;                                            target=&quot;_blank&quot; &#10;                                            rel=&quot;noopener noreferrer&quot; &#10;                                            className=&quot;text-sm text-indigo-600 dark:text-indigo-400 hover:underline break-all&quot;&#10;                                        &gt;&#10;                                        {index+1}. {source.title || source.uri}&#10;                                        &lt;/a&gt;&#10;                                    &lt;/li&gt;&#10;                                ))}&#10;                            &lt;/ul&gt;&#10;                        )}&#10;                    &lt;/section&gt;&#10;                ); })()}&#10;            &lt;/div&gt;&#10;        &lt;/article&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default GemDetailView;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>